<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.voting.db.dao.user.UserLoginMapper">
	<resultMap id="BaseResultMap" type="com.voting.model.user.UserLogin">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="salt" property="salt" jdbcType="BIGINT" />
		<result column="loginname" property="loginname" jdbcType="VARCHAR" />
		<result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
		<result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="update_id" property="updateId" jdbcType="BIGINT" />
		<result column="update_name" property="updateName" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_name, password, salt, loginname, login_time, login_ip, status,
		update_id,
		update_name, update_time
	</sql>
	<sql id="condition">
		<if test="null!=params" />
	</sql>
	<select id="get" resultMap="BaseResultMap" parameterType="java.lang.Long"
		flushCache="false" useCache="true">
		SELECT
		<include refid="Base_Column_List" />
		FROM user_login
		WHERE id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="delete" parameterType="java.lang.Long" flushCache="true">
		DELETE FROM user_login
		WHERE id = #{id,jdbcType=BIGINT}
	</delete>

	<insert id="insertSel" parameterType="com.voting.model.user.UserLogin"
		flushCache="true">
		INSERT INTO user_login
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="loginname != null">
				loginname,
			</if>
			<if test="loginTime != null">
				login_time,
			</if>
			<if test="loginIp != null">
				login_ip,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="updateId != null">
				update_id,
			</if>
			<if test="updateName != null">
				update_name,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=BIGINT},
			</if>
			<if test="loginname != null">
				#{loginname,jdbcType=VARCHAR},
			</if>
			<if test="loginTime != null">
				#{loginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="loginIp != null">
				#{loginIp,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="updateId != null">
				#{updateId,jdbcType=BIGINT},
			</if>
			<if test="updateName != null">
				#{updateName,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateById" parameterType="com.voting.model.user.UserLogin"
		flushCache="true">
		UPDATE user_login
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=BIGINT},
			</if>
			<if test="loginname != null">
				loginname = #{loginname,jdbcType=VARCHAR},
			</if>
			<if test="loginTime != null">
				login_time = #{loginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="loginIp != null">
				login_ip = #{loginIp,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="updateId != null">
				update_id = #{updateId,jdbcType=BIGINT},
			</if>
			<if test="updateName != null">
				update_name = #{updateName,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		WHERE id = #{id,jdbcType=BIGINT}
	</update>
	<update id="update" parameterType="com.voting.model.user.UserLogin"
		flushCache="true">
		UPDATE user_login
		SET user_name = #{userName,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=BIGINT},
		loginname = #{loginname,jdbcType=VARCHAR},
		login_time = #{loginTime,jdbcType=TIMESTAMP},
		login_ip = #{loginIp,jdbcType=VARCHAR},
		status = #{status,jdbcType=TINYINT},
		update_id = #{updateId,jdbcType=BIGINT},
		update_name = #{updateName,jdbcType=VARCHAR},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		WHERE id = #{id,jdbcType=BIGINT}
	</update>
</mapper>